{"version":3,"sources":["assets/images/luxun_1.jpg","theme/index.js","layouts/Default.js","components/ImagePreview.js","components/ImageCard.js","components/DictumEdit.js","screens/Home.js","screens/Root.js","App.js","stores/helpers.js","stores/Builder.js","stores/index.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","createMuiTheme","palette","primary","teal","secondary","deepOrange","typography","fontFamily","join","Container","styled","div","_templateObject","TitleLink","Link","_templateObject2","SubTitle","Typography","_templateObject3","Content","section","_templateObject4","Root","_ref","children","react_default","a","createElement","AppBar_default","position","Toolbar_default","Typography_default","variant","color","to","Button_default","ImagePreview","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","autorun","_createImage","builder","imageSrc","reaction","dictum","author","textColor","shouldAdjustText","componentDidUpdate","prevProps","image","state","_adjustText","handleImageReload","handleSnackbarClose","setState","error","_computeScale","memoize","containerWidth","containerHeight","widthScale","Math","min","width","heightScale","height","_computeSize","scale","authorTextRef","React","createRef","dictumTextRef","src","_this2","toggleLoading","window","Image","onload","onerror","changeImage","stageRef","forwardRef","current","authorText","dictumText","authorTextY","getStage","getHeight","y","_this$props","_this$props$builder","_this$state","_this$_computeSize","react","react_konva_lib","ref","preventDefault","x","fill","text","fontSize","align","verticalAlign","draggable","concat","padding","Snackbar_default","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","aria-describedby","message","id","action","key","size","onClick","Component","defaultProps","enhance","compose","inject","_ref2","store","observer","CenteredCardContent","CardContent","ImageCard_templateObject","rightIconStyle","marginLeft","ImageCard","handleFileUpload","file","target","files","fileReader","FileReader","addEventListener","result","readAsDataURL","handleFileDownload","asyncToGenerator","regenerator_default","mark","_callee","fileSaver","canvas","wrap","_context","prev","next","e","then","t","bind","sent","default","canvasRef","toCanvas","toBlob","blob","stop","_x","apply","arguments","handleFileCopy","handleExternalImageSrcChange","_ref3","changeExternalImage","value","handleExternalImageLoad","externalImageSrc","handleExternalImagePick","pickExternalImage","externalImageFetching","Card_default","CardHeader_default","title","components_ImagePreview","CardActions_default","onChange","accept","style","display","type","htmlFor","component","CloudUpload_default","Save_default","Tooltip_default","disableTouchListener","FileCopy_default","CardContent_default","gutterBottom","TextField_default","label","placeholder","helperText","fullWidth","disabled","margin","InputProps","endAdornment","InputAdornment_default","IconButton_default","Send_default","decorate","observable","_ref4","DictumEdit","handleMultilineToggle","toggleMultiline","checked","handleDictumChange","changeDictum","handleAuthorToggle","changeAuthor","handleAuthorChange","handleColorChange","_ref5","hex","changeTextColor","authorVisible","multiline","drawDictum","reset","Switch_default","Cached_default","react_color_lib","triangle","colors","onChangeComplete","FormControlLabel_default","control","Collapse_default","in","SettingsBackupRestore_default","_ref6","Home_templateObject","Alert","SnackbarContent","Home_templateObject2","theme","light","Home","isAlertVisible","handleAlertClose","Home_Container","aria-label","Close_default","components_ImageCard","components_DictumEdit","withTheme","BrowserRouter","basename","process","Switch","Default","path","Route","exact","generateClassName","createGenerateClassName","jss","create","objectSpread","jssPreset","insertionPoint","document","getElementById","App","index_module","JssProvider_default","styles","screens_Root","CssBaseline_default","DEFAULT_DICTIONARY","randomDictum","floor","random","length","Builder","types","model","defaultImageSrc","imageLoading","views","self","actions","controller","AbortController","signal","loading","flow","response","regular","abort","fetch","json","urls","t0","console","finish","optional","addMiddleware","actionLogger","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","log","catch","ReactDOM","render","src_App","URL","origin","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cbeb17ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/luxun_1.77bdf646.jpg\";","import { createMuiTheme } from '@material-ui/core/styles';\nimport teal from '@material-ui/core/colors/teal';\nimport deepOrange from '@material-ui/core/colors/deepOrange';\n\nexport default createMuiTheme({\n  palette: {\n    primary: teal,\n    secondary: deepOrange,\n  },\n  typography: {\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n  },\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`;\n\nconst TitleLink = styled(Link)`\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst SubTitle = styled(Typography)`\n  flex-grow: 1;\n  padding-left: 24px;\n`;\n\nconst Content = styled.section`\n  flex-grow: 1;\n  padding: 24px;\n`;\n\nconst Root = ({ children }) => (\n  <Container>\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <Typography variant=\"title\" color=\"inherit\">\n          <TitleLink to=\"/\">MEME</TitleLink>\n        </Typography>\n        <SubTitle color=\"inherit\">For modern browsers only</SubTitle>\n        <Button color=\"inherit\">Gallery</Button>\n      </Toolbar>\n    </AppBar>\n    <Content>{children}</Content>\n  </Container>\n);\n\nexport default Root;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { autorun, reaction } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport compose from 'recompose/compose';\nimport { Stage, Layer, Image, Text } from 'react-konva';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport memoize from 'memoize-one';\n\nclass ImagePreview extends Component {\n  static propTypes = {\n    image: PropTypes.object,\n    builder: PropTypes.object.isRequired,\n    containerWidth: PropTypes.number,\n    containerHeight: PropTypes.number,\n  };\n\n  static defaultProps = {\n    containerWidth: 600,\n    containerHeight: 600,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      image: null,\n      error: null,\n    };\n\n    this.authorTextRef = React.createRef();\n    this.dictumTextRef = React.createRef();\n  }\n\n  componentDidMount = () => {\n    autorun(() => {\n      this._createImage(this.props.builder.imageSrc);\n    });\n\n    reaction(\n      () => ({\n        dictum: this.props.builder.dictum,\n        author: this.props.builder.author,\n        textColor: this.props.builder.textColor,\n      }),\n      props => {\n        this.shouldAdjustText = true;\n      }\n    );\n  };\n\n  componentDidUpdate = (prevProps, { image }) => {\n    if (image !== this.state.image || this.shouldAdjustText) {\n      this._adjustText();\n      this.shouldAdjustText = false;\n    }\n  };\n\n  handleImageReload = () => {\n    this._createImage(this.props.builder.imageSrc);\n  };\n\n  handleSnackbarClose = () => {\n    this.setState({ error: null });\n  };\n\n  _createImage(src) {\n    if (!src) {\n      return;\n    }\n\n    const { builder } = this.props;\n    builder.toggleLoading(true);\n\n    const image = new window.Image();\n    image.src = src;\n    image.onload = () => {\n      builder.toggleLoading(false);\n\n      this.setState({\n        image,\n      });\n    };\n    image.onerror = error => {\n      builder.toggleLoading(false);\n      builder.changeImage('');\n\n      this.setState({ error });\n    };\n  }\n\n  _adjustText() {\n    const stageRef = this.props.forwardRef.current;\n    const authorText = this.authorTextRef.current;\n    const dictumText = this.dictumTextRef.current;\n\n    if (!stageRef || !authorText || !dictumText) {\n      return;\n    }\n\n    const stage = stageRef.getStage();\n    const authorTextY = stage.getHeight() - authorText.getHeight();\n    authorText.y(authorTextY);\n    dictumText.y(authorTextY - dictumText.getHeight());\n  }\n\n  _computeScale = memoize((containerWidth, containerHeight, image) => {\n    if (!image) {\n      return 1;\n    }\n\n    const widthScale = Math.min(containerWidth, image.width) / image.width;\n    const heightScale = Math.min(containerHeight, image.height) / image.height;\n    return Math.min(widthScale, heightScale, 1);\n  });\n\n  _computeSize = (image, scale, containerWidth, containerHeight) => {\n    if (!image) {\n      return {\n        width: containerWidth,\n        height: containerHeight,\n      };\n    }\n\n    return {\n      width: image.width * scale,\n      height: image.height * scale,\n    };\n  };\n\n  render() {\n    const {\n      builder: { dictum, author, textColor },\n      containerWidth,\n      containerHeight,\n      forwardRef,\n    } = this.props;\n    const { image, error } = this.state;\n    const scale = this._computeScale(containerWidth, containerHeight, image);\n    const { width, height } = this._computeSize(image, scale, containerWidth, containerWidth);\n\n    return (\n      <Fragment>\n        <Stage ref={forwardRef} width={width} height={height}>\n          <Layer>\n            <Image image={image} preventDefault={false} scale={{ x: scale, y: scale }} />\n            {image && (\n              <Fragment>\n                <Text\n                  ref={this.dictumTextRef}\n                  width={width}\n                  x={0}\n                  y={height}\n                  fill={textColor}\n                  text={dictum}\n                  fontSize={36}\n                  align=\"center\"\n                  verticalAlign=\"bottom\"\n                  preventDefault={false}\n                  draggable\n                />\n                <Text\n                  ref={this.authorTextRef}\n                  width={width}\n                  x={0}\n                  y={height}\n                  fill={textColor}\n                  text={author && `——${author}`}\n                  padding={16}\n                  fontSize={30}\n                  align=\"right\"\n                  verticalAlign=\"bottom\"\n                  preventDefault={false}\n                  draggable\n                />\n              </Fragment>\n            )}\n          </Layer>\n        </Stage>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          open={!!error}\n          autoHideDuration={3000}\n          onClose={this.handleSnackbarClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Failed to loading image, please check the URL</span>}\n          action={[\n            <Button key=\"reload\" color=\"secondary\" size=\"small\" onClick={this.handleImageReload}>\n              RETRY\n            </Button>,\n          ]}\n        />\n      </Fragment>\n    );\n  }\n}\n\nconst enhance = compose(\n  inject(({ store }) => ({\n    builder: store.builder,\n  })),\n  observer\n);\nexport default enhance(ImagePreview);\n","import React, { Component, Fragment } from 'react';\nimport { decorate, observable } from 'mobx';\nimport { inject, observer } from 'mobx-react';\nimport compose from 'recompose/compose';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport SaveIcon from '@material-ui/icons/Save';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport ImagePreview from './ImagePreview';\n\nconst CenteredCardContent = styled(CardContent)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst rightIconStyle = {\n  marginLeft: 8,\n};\nclass ImageCard extends Component {\n  static propTypes = {\n    builder: PropTypes.object.isRequired,\n  };\n\n  error = null;\n\n  constructor(props) {\n    super(props);\n\n    this.canvasRef = React.createRef();\n  }\n\n  handleFileUpload = ({ target }) => {\n    const file = target.files[0];\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.addEventListener('load', () => {\n        this.props.builder.changeImage(fileReader.result);\n      });\n      fileReader.readAsDataURL(file);\n    }\n  };\n\n  handleFileDownload = async file => {\n    const fileSaver = (await import('file-saver')).default;\n    const canvas = this.canvasRef.current.getStage().toCanvas();\n    try {\n      canvas.toBlob(blob => {\n        fileSaver(blob, 'pretty image.png');\n      });\n    } catch (error) {\n      this.error = error;\n    }\n  };\n\n  handleFileCopy = () => {};\n\n  handleExternalImageSrcChange = ({ target }) => {\n    this.props.builder.changeExternalImage(target.value);\n  };\n\n  handleExternalImageLoad = () => {\n    const { builder } = this.props;\n    builder.changeImage(builder.externalImageSrc);\n  };\n\n  handleSnackbarClose = () => {\n    this.error = null;\n  };\n\n  handleExternalImagePick = () => {\n    this.props.builder.pickExternalImage();\n  };\n\n  render() {\n    const {\n      builder: { externalImageSrc, externalImageFetching },\n    } = this.props;\n\n    return (\n      <Fragment>\n        <Card>\n          <CardHeader title=\"图片预览\" />\n          <CenteredCardContent>\n            <ImagePreview forwardRef={this.canvasRef} />\n          </CenteredCardContent>\n          <CardActions>\n            <input\n              onChange={this.handleFileUpload}\n              accept=\"image/*\"\n              style={{ display: 'none' }}\n              id=\"upload-image\"\n              type=\"file\"\n            />\n            <label htmlFor=\"upload-image\">\n              <Button component=\"span\" color=\"primary\">\n                Upload\n                <CloudUploadIcon style={rightIconStyle} />\n              </Button>\n            </label>\n            <Button color=\"secondary\" onClick={this.handleFileDownload}>\n              Save\n              <SaveIcon style={rightIconStyle} />\n            </Button>\n            <Fragment>\n              <Tooltip disableTouchListener title=\"Not supported yet!\">\n                <Button color=\"default\" onClick={this.handleFileCopy}>\n                  Copy\n                  <FileCopyIcon style={rightIconStyle} />\n                </Button>\n              </Tooltip>\n            </Fragment>\n          </CardActions>\n          <CardContent>\n            <ul>\n              <li>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Text supports drag & drop\n                </Typography>\n              </li>\n              <li>\n                <Typography color=\"textSecondary\" gutterBottom>\n                  Image might overflow with insufficient space, click Save button to preview whole\n                </Typography>\n              </li>\n              <li>\n                <Typography color=\"textSecondary\">\n                  Failed to find a clipboard api to programmatically copy canvas/image, right click\n                  and select 'Copy image' works though\n                </Typography>\n              </li>\n            </ul>\n          </CardContent>\n\n          <CardContent>\n            <TextField\n              label=\"External source\"\n              value={externalImageSrc}\n              placeholder=\"Use external image source\"\n              helperText={`Enter an valid image source and click 'APPLY'`}\n              fullWidth\n              disabled={externalImageFetching}\n              margin=\"normal\"\n              onChange={this.handleExternalImageSrcChange}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <Tooltip disableTouchListener title=\"Apply\">\n                      <div>\n                        <IconButton\n                          disabled={!externalImageSrc}\n                          onClick={this.handleExternalImageLoad}\n                        >\n                          <SendIcon />\n                        </IconButton>\n                      </div>\n                    </Tooltip>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </CardContent>\n          <CardActions>\n            <Button onClick={this.handleExternalImagePick}>I'm Feeling Lucky</Button>\n          </CardActions>\n        </Card>\n\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center',\n          }}\n          open={!!this.error}\n          autoHideDuration={3000}\n          onClose={this.handleSnackbarClose}\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={\n            <span id=\"message-id\">\n              External image may not be downloaded this way. Right click and select 'Save image\n              as...' instead\n            </span>\n          }\n          action={[\n            <Button key=\"close\" color=\"secondary\" size=\"small\" onClick={this.handleSnackbarClose}>\n              CLOSE\n            </Button>,\n          ]}\n        />\n      </Fragment>\n    );\n  }\n}\n\ndecorate(ImageCard, {\n  error: observable,\n});\nconst enhance = compose(\n  inject(({ store }) => ({\n    builder: store.builder,\n  })),\n  observer\n);\nexport default enhance(ImageCard);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { inject, observer } from 'mobx-react';\nimport compose from 'recompose/compose';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Switch from '@material-ui/core/Switch';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Button from '@material-ui/core/Button';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport RestoreIcon from '@material-ui/icons/SettingsBackupRestore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { TwitterPicker } from 'react-color';\n\nconst rightIconStyle = {\n  marginLeft: 8,\n};\n\nclass DictumEdit extends Component {\n  static propTypes = {\n    builder: PropTypes.object.isRequired,\n  };\n\n  handleMultilineToggle = ({ target }) => {\n    this.props.builder.toggleMultiline(target.checked);\n  };\n\n  handleDictumChange = ({ target }) => {\n    this.props.builder.changeDictum(target.value);\n  };\n\n  handleAuthorToggle = ({ target }) => {\n    this.props.builder.changeAuthor(target.checked ? '鲁迅' : '');\n  };\n\n  handleAuthorChange = ({ target }) => {\n    this.props.builder.changeAuthor(target.value);\n  };\n\n  handleColorChange = ({ hex }) => {\n    this.props.builder.changeTextColor(hex);\n  };\n\n  render() {\n    const {\n      builder: { dictum, author, authorVisible, multiline, textColor, drawDictum, reset },\n    } = this.props;\n\n    return (\n      <Card>\n        <CardHeader title=\"内容编辑\" />\n        <CardContent>\n          <TextField\n            label=\"文字内容\"\n            multiline={multiline}\n            value={dictum}\n            placeholder=\"请输入文字内容\"\n            helperText={multiline ? '回车进入下一行' : '使用右侧开关切换多行模式'}\n            fullWidth\n            margin=\"normal\"\n            onChange={this.handleDictumChange}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <Switch checked={multiline} onChange={this.handleMultilineToggle} />\n                </InputAdornment>\n              ),\n            }}\n          />\n        </CardContent>\n\n        <CardActions>\n          <Button color=\"default\" variant=\"contained\" onClick={drawDictum}>\n            RANDOM\n            <CachedIcon style={rightIconStyle} />\n          </Button>\n        </CardActions>\n\n        <CardContent>\n          <Typography component=\"p\" color=\"textSecondary\" gutterBottom>\n            设置文字颜色\n          </Typography>\n          <TwitterPicker\n            triangle=\"hide\"\n            width=\"280px\"\n            color={textColor}\n            colors={[\n              '#000',\n              '#f3f3f3',\n              '#f44336',\n              '#9c27b0',\n              '#673ab7',\n              '#3f51b5',\n              '#03a9f4',\n              '#009688',\n              '#ffc107',\n              '#cddc39',\n            ]}\n            onChangeComplete={this.handleColorChange}\n          />\n        </CardContent>\n\n        <CardContent>\n          <FormControlLabel\n            control={\n              <Switch color=\"primary\" checked={authorVisible} onChange={this.handleAuthorToggle} />\n            }\n            label=\"显示出处\"\n          />\n          <Collapse in={authorVisible}>\n            <TextField\n              label=\"出处\"\n              value={author}\n              placeholder=\"请输入出处\"\n              fullWidth\n              margin=\"normal\"\n              onChange={this.handleAuthorChange}\n            />\n          </Collapse>\n        </CardContent>\n        <CardActions>\n          <Button color=\"secondary\" variant=\"contained\" onClick={reset}>\n            RESET\n            <RestoreIcon style={rightIconStyle} />\n          </Button>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nconst enhance = compose(\n  inject(({ store }) => ({\n    builder: store.builder,\n  })),\n  observer\n);\nexport default enhance(DictumEdit);\n","import React, { Component } from 'react';\nimport { observer } from 'mobx-react';\nimport { decorate, observable } from 'mobx';\nimport compose from 'recompose/compose';\nimport styled from 'styled-components';\nimport { withTheme } from '@material-ui/core/styles';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport ImageCard from '../components/ImageCard';\nimport DictumEdit from '../components/DictumEdit';\n\nconst Container = styled.section`\n  display: grid;\n  grid-template-columns: repeat(2, minmax(300px, 1fr));\n  grid-gap: 24px;\n  align-items: start;\n  max-width: 1200px;\n  min-width: 300px;\n  margin: auto;\n  padding-top: 24px;\n\n  @media (max-width: 800px) {\n    grid-template-columns: none;\n  }\n`;\n\nconst Alert = styled(SnackbarContent)`\n  grid-column: 1 / span 2;\n  width: 100%;\n  max-width: 100%;\n  background-color: ${props => props.theme.palette.error.light};\n\n  @supports (display: grid) {\n    display: none;\n  }\n`;\n\nclass Home extends Component {\n  isAlertVisible = true;\n\n  handleAlertClose = () => {\n    this.isAlertVisible = false;\n  };\n\n  render() {\n    const { theme } = this.props;\n\n    return (\n      <Container>\n        {this.isAlertVisible && (\n          <Alert\n            message=\"Your browser seems to be out of date so that it lacks support of CSS Grid Layout.\"\n            theme={theme}\n            action={[\n              <IconButton\n                key=\"close\"\n                aria-label=\"Close\"\n                color=\"inherit\"\n                onClick={this.handleAlertClose}\n              >\n                <CloseIcon />\n              </IconButton>,\n            ]}\n          />\n        )}\n        <ImageCard />\n        <DictumEdit />\n      </Container>\n    );\n  }\n}\n\ndecorate(Home, {\n  isAlertVisible: observable,\n});\nconst enhance = compose(\n  withTheme(),\n  observer\n);\nexport default enhance(Home);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport DefaultLayout from '../layouts/Default';\nimport Home from './Home';\n\nclass Root extends Component {\n  render() {\n    return (\n      <Router basename={process.env.REACT_APP_PUBLIC_URL}>\n        <Switch>\n          <DefaultLayout path=\"/\">\n            <Switch>\n              <Route exact component={Home} path=\"/\" />\n            </Switch>\n          </DefaultLayout>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default Root;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Provider } from 'mobx-react';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { create } from 'jss';\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport { createGenerateClassName, jssPreset } from '@material-ui/core/styles';\n\nimport theme from './theme';\nimport Root from './screens/Root';\n\n// const styleNode = document.createComment('jss-insertion-point');\n// document.head.insertBefore(styleNode, document.head.firstChild);\n\nconst generateClassName = createGenerateClassName();\nconst jss = create({\n  ...jssPreset(),\n  // We define a custom insertion point that JSS will look for injecting the styles in the DOM.\n  insertionPoint: document.getElementById('jss-insertion-point'),\n});\n\nclass App extends Component {\n  static propTypes = {\n    store: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const { store } = this.props;\n\n    return (\n      <Provider store={store}>\n        <JssProvider jss={jss} generateClassName={generateClassName}>\n          <MuiThemeProvider theme={theme}>\n            <Fragment>\n              <Root />\n              <CssBaseline />\n            </Fragment>\n          </MuiThemeProvider>\n        </JssProvider>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","const DEFAULT_DICTIONARY = [\n  '晚睡的人，没有对象',\n  '表情包多的人，没有对象',\n  '我没说过这些话',\n  'no zuo no die',\n  '我就静静地看着你们装逼',\n];\n\nexport const randomDictum = () =>\n  DEFAULT_DICTIONARY[Math.floor(Math.random() * DEFAULT_DICTIONARY.length)];\n","import { types, flow } from 'mobx-state-tree';\n\nimport defaultImageSrc from '../assets/images/luxun_1.jpg';\nimport { randomDictum } from './helpers';\n\nexport const Builder = types\n  .model({\n    dictum: randomDictum(),\n    author: '鲁迅',\n    imageSrc: defaultImageSrc,\n    imageLoading: false,\n    externalImageSrc: '',\n    externalImageFetching: false,\n    multiline: false,\n    textColor: '#FFF',\n  })\n  .views(self => ({\n    get authorVisible() {\n      return !!self.author;\n    },\n  }))\n  .actions(self => {\n    let controller = new window.AbortController();\n    let { signal } = controller;\n\n    return {\n      changeDictum(dictum) {\n        self.dictum = dictum;\n      },\n\n      drawDictum() {\n        self.dictum = randomDictum();\n      },\n\n      changeAuthor(author) {\n        self.author = author;\n      },\n\n      changeImage(src) {\n        self.imageSrc = src;\n      },\n\n      changeExternalImage(src) {\n        self.externalImageSrc = src;\n      },\n\n      changeTextColor(color) {\n        self.textColor = color;\n      },\n\n      toggleLoading(loading) {\n        self.imageLoading = loading;\n      },\n\n      toggleMultiline(multiline) {\n        self.multiline = multiline;\n      },\n\n      reset() {\n        self.imageSrc = defaultImageSrc;\n        self.dictum = randomDictum();\n        self.author = '鲁迅';\n        self.textColor = '#FFF';\n      },\n\n      pickExternalImage: flow(function* pickExternalImage() {\n        if (self.externalImageFetching) {\n          controller.abort();\n          controller = new window.AbortController();\n          signal = controller.signal;\n        } else {\n          self.externalImageFetching = true;\n        }\n\n        try {\n          const response = yield fetch(\n            `https://api.unsplash.com/photos/random/?client_id=${\n              process.env.REACT_APP_UNSPLASH_ACCESS_KEY\n            }`,\n            {\n              signal,\n            }\n          );\n          const {\n            urls: { regular },\n          } = yield response.json();\n          self.externalImageSrc = regular;\n          self.imageSrc = regular;\n        } catch (error) {\n          // TODO haven't decided what to do yet\n          console.error(error);\n        } finally {\n          self.externalImageFetching = false;\n        }\n      }),\n    };\n  });\n","import { addMiddleware, types } from 'mobx-state-tree';\nimport { actionLogger } from 'mst-middlewares';\n\nimport { Builder } from './Builder';\n\nconst RootStore = types.model({\n  builder: types.optional(Builder, {}),\n});\n\nconst store = RootStore.create();\n\naddMiddleware(store, actionLogger);\n\nexport default store;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport store from './stores';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App store={store} />, document.getElementById('root'));\n\nregisterServiceWorker();\n"],"sourceRoot":""}